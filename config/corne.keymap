 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ { 

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };  

    keymap  {

        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        &none &kp Q &kp W       &kp F       &kp P       &kp G           &kp J &kp L         &kp U       &kp Y       &kp SEMI &none
        &none &kp A &hm LCTRL R &hm LALT S  &hm LGUI T  &kp D           &kp H &hm RGUI N    &hm RALT E  &hm LCTRL I &kp O &none    
        &none &kp Z &kp X       &kp C       &kp V       &kp B           &kp K &kp M         &kp COMMA   &kp DOT     &kp FSLH &none
                 &kp TAB &sk LSHIFT &mt LC(LG(LALT)) SPACE           &kp ENTER &to 1 &kp BSPC
            >;
        };
/* Layer 1: Symbols
 * ,-----.-----.-----.-----.-----.                      ,-----.-----.-----.-----.-----.
 * | 1!  | 2@  | 3#  | 4$  | 5%  |                      | 6^  | 7&  | 8*  | 9(  | 0)  |
 * |-----+-----+-----+-----+-----|                      |-----+-----+-----+-----+-----|
 * | `~  |HOME |PGUP |PGDN | END |                      |LEFT |DOWN | UP  |RGHT | '"  |
 * |-----+-----+-----+-----+-----+                      |-----+-----+-----+-----+-----|
 * | ESC | -_  | =+  |     | to 3|                      | {[  |  (  |  )  | ]}  | \|  |
 * `-----'-----'-----'-----'-----'                      `-----'-----'-----'-----'-----'
 *               .-------.-------.-------.      .-------.-------.-------.   
 *               |       |       |       |      |       |       |       |
 *               '-------'-------'-------'      '-------'-------'-------' 
 */
      	left_layer {
            bindings = <
		&none &kp N1     &kp N2 &kp N3 &kp N4 &kp N5                        &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none
        &none &kp GRAVE  &hm LCTRL R &hm LALT S  &hm LGUI T &kp DOT         &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp APOSTROPHE &none    
		&none &kp ESCAPE &kp MINUS &kp EQUAL &kp LC(GLOBE) &to 3 	                &kp LBKT &kp LPRN &kp RPRN &kp RBKT &kp BACKSLASH &none 
					   &kp TAB &sk LSHIFT &to 0  					&kp ENTER &to 2 &kp BSPC 
		    >;
		};
		
		right_layer {
		    bindings = <
		&none &kp ESC  &kp C_PP &kp C_PREV    &kp C_NEXT    &kp LS(MINUS)    		&kp MINUS  &kp N7 &kp N8 &kp N9 &trans &none
		&none &kp TAB  &trans   &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL) 			&kp EQUAL &kp N4  &kp N5  &kp N6   &kp ENTER &none
		&none &to 4    &kp AMPS &kp SLASH     &kp STAR      &kp DOT    			    &kp N0 &kp N1 &kp N2 &kp N3  &trans &none
					&kp ENTER &to 0 &sk LSHIFT      		&sk RALT  &to 2 &kp BSPC
		    >;
		};
		
		tri_layer {
		    bindings = <
		&none &trans &trans &trans &trans &trans			&kp LG(LBKT)   &kp LC(LS(TAB))   &kp RC(TAB) &kp LG(RBKT) &trans &none
		&none &trans &trans &trans &trans &trans  			&kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp ENTER &none
		&none &trans &trans &trans &trans &trans   			&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans &none
					&kp ENTER &to 0 &sk LSHIFT                  &sk RALT &to 1 &kp BSPC
            >;
        };
    };
};
